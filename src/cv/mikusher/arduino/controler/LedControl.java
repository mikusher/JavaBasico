/*
 * Copyright (C) 2018 Luis Tavares
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 */
package cv.mikusher.arduino.controler;

import cv.mikusher.arduino.utils.ArduinoSerial;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;

/**
 *
 * @author Luis Tavares
 */
public class LedControl extends javax.swing.JFrame {

    /**
     * Creates new form LedControl
     */
    ArduinoSerial arduino = new ArduinoSerial("COM3");

    public LedControl() {
        initComponents();
        this.setLocationRelativeTo(null);
        arduino.initialize();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        bLigar = new javax.swing.JButton();
        bDesligar = new javax.swing.JButton();
        inputPiscar = new javax.swing.JTextField();
        bPiscar = new javax.swing.JButton();
        bClose = new javax.swing.JButton();
        bMorse = new javax.swing.JButton();
        bBinario = new javax.swing.JButton();
        textToMorse = new javax.swing.JTextField();
        jtBinarioInput = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CONTROLE DE LED");
        setResizable(false);

        jLabel1.setText("CONTROLE DE LED");

        bLigar.setText("Ligar");
        bLigar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLigarActionPerformed(evt);
            }
        });

        bDesligar.setText("Desligar");
        bDesligar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDesligarActionPerformed(evt);
            }
        });

        inputPiscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputPiscarActionPerformed(evt);
            }
        });

        bPiscar.setText("Piscar");
        bPiscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPiscarActionPerformed(evt);
            }
        });

        bClose.setText("Close");
        bClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCloseActionPerformed(evt);
            }
        });

        bMorse.setText("Morse");
        bMorse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bMorseActionPerformed(evt);
            }
        });

        bBinario.setText("Binario");
        bBinario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBinarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bClose)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jtBinarioInput)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bBinario))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(textToMorse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bMorse))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(149, 149, 149))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(bLigar)
                                .addGap(18, 18, 18)
                                .addComponent(bDesligar)
                                .addGap(95, 95, 95)
                                .addComponent(inputPiscar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bPiscar)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {bBinario, bDesligar, bLigar, bMorse, bPiscar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bLigar)
                    .addComponent(bDesligar)
                    .addComponent(inputPiscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bPiscar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bMorse)
                    .addComponent(textToMorse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bBinario)
                    .addComponent(jtBinarioInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(bClose, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {bBinario, bDesligar, bLigar, bMorse, bPiscar});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bPiscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPiscarActionPerformed

        String _input = inputPiscar.getText().trim();
        try {
            int input = Integer.parseInt(_input);
            for (int i = 0; i < input; i++) {
                try {
                    arduino.send("l");
                    arduino.send("d");
                    TimeUnit.SECONDS.sleep(1);
                } catch (InterruptedException ex) {
                    Logger.getLogger(LedControl.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (NumberFormatException e) {
            System.out.println("O valor deve ser um numero inteiro.");
            return;
        }

    }//GEN-LAST:event_bPiscarActionPerformed

    private void inputPiscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputPiscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputPiscarActionPerformed

    private void bLigarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLigarActionPerformed
        arduino.send("l");
    }//GEN-LAST:event_bLigarActionPerformed

    private void bDesligarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDesligarActionPerformed
        arduino.send("d");
    }//GEN-LAST:event_bDesligarActionPerformed

    private void bCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCloseActionPerformed
        System.exit(0);
    }//GEN-LAST:event_bCloseActionPerformed

    private void bMorseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bMorseActionPerformed
                
        char[] english = { 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',
              'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 
              'y', 'z', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0',
              ',', '.', '?' };

        String[] morse = { ".-", "-...", "-.-.", "-..", ".", "..-.", "--.", "....", "..", 
                    ".---", "-.-", ".-..", "--", "-.", "---", ".---.", "--.-", ".-.",
                    "...", "-", "..-", "...-", ".--", "-..-", "-.--", "--..", ".----",
                    "..---", "...--", "....-", ".....", "-....", "--...", "---..", "----.",
                    "-----", "--..--", ".-.-.-", "..--.." };
        
        int time = 1;
        String userInput = textToMorse.getText().toLowerCase();
        char[] chars = userInput.toCharArray();
        
        String str = "";
        for (int i = 0; i < chars.length; i++){
            for (int j = 0; j < english.length; j++){

                if (english[j] == chars[i]){
                    str = str + morse[j] + " ";  
                }
            }
        }
        String strConvert = str.replace(".", "l").replace("-", "d");
        char[] charsFinal = strConvert.toCharArray();
        System.out.println(charsFinal);
        for (int i = 0; i < charsFinal.length; i++) {
            switch (charsFinal[i]) {
                case 'l':
                    arduino.send("l");
                    break;
                case 'd':
                    arduino.send("d");
                    break;
                default:
                    try {
                        TimeUnit.SECONDS.sleep(time);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(LedControl.class.getName()).log(Level.SEVERE, null, ex);
                    }   break;
            }
        }
        arduino.send("d");
    }//GEN-LAST:event_bMorseActionPerformed

    private void bBinarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBinarioActionPerformed
        int time = 1;
        String _inputPisca = inputPiscar.getText();
        int numeroPisca = Integer.parseInt(_inputPisca);
        
        for (int i = 0; i < numeroPisca; i++) {
            try {
                TimeUnit.SECONDS.sleep(time);
                arduino.send("l");
                arduino.send("d");
            } catch (InterruptedException ex) {
                Logger.getLogger(LedControl.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_bBinarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LedControl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LedControl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LedControl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LedControl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LedControl().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBinario;
    private javax.swing.JButton bClose;
    private javax.swing.JButton bDesligar;
    private javax.swing.JButton bLigar;
    private javax.swing.JButton bMorse;
    private javax.swing.JButton bPiscar;
    private javax.swing.JTextField inputPiscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jtBinarioInput;
    private javax.swing.JTextField textToMorse;
    // End of variables declaration//GEN-END:variables
}
